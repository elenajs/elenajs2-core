{"version":3,"sources":["../src/HttpStatusError.js"],"names":["require","httpStatus","ExtendableError","message","name","constructor","Error","captureStackTrace","stack","HttpStatusError","statusCode","toString","_statusCode","HttpStatus","getStatusDescription","module","exports"],"mappings":"AAAA;;;;;;;;;;AACAA,QAAQ,eAAR;;AAEA,IAAIC,aAAaD,QAAQ,uBAAR,CAAjB;;IAEME,e;;;AACF,6BAAYC,OAAZ,EAAqB;AAAA;;AAAA,sIACXA,OADW;;AAEjB,cAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,cAAKD,OAAL,GAAeA,OAAf;AACA,YAAI,OAAOG,MAAMC,iBAAb,KAAmC,UAAvC,EAAmD;AAC/CD,kBAAMC,iBAAN,QAA8B,MAAKF,WAAnC;AACH,SAFD,MAEO;AACH,kBAAKG,KAAL,GAAc,IAAIF,KAAJ,CAAUH,OAAV,CAAD,CAAqBK,KAAlC;AACH;AARgB;AASpB;;;EAVyBF,K;;IAaxBG,e;;;AACF,6BAAYC,UAAZ,EAAwBP,OAAxB,EAAiC;AAAA;;AAC7BO,qBAAaA,WAAWC,QAAX,CAAoB,EAApB,CAAb;;AAD6B,uIAEvBR,WAAWO,aAAa,KAAb,GAAqBT,WAAWS,UAAX,CAFT;;AAG7B,eAAKE,WAAL,GAAmBF,UAAnB;AAH6B;AAIhC;;;;4BAEiB;AACd,mBAAO,KAAKE,WAAZ;AACH;;;4BACwB;AACrB,mBAAOC,WAAWC,oBAAX,CAAgC,KAAKJ,UAArC,CAAP;AACH;;;;EAZyBR,e;;AAe9Ba,OAAOC,OAAP,GAAiBP,eAAjB","file":"HttpStatusError.js","sourcesContent":["\"use strict\";\nrequire('gulp-polyfill');\n\nlet httpStatus = require('./utils/HttpStatus.js');\n\nclass ExtendableError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        this.message = message;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n\nclass HttpStatusError extends ExtendableError {\n    constructor(statusCode, message) {\n        statusCode = statusCode.toString(10);\n        super(message || statusCode + ' - ' + httpStatus[statusCode]);\n        this._statusCode = statusCode;\n    }\n\n    get statusCode () {\n        return this._statusCode;\n    }\n    get statusDescription () {\n        return HttpStatus.getStatusDescription(this.statusCode);\n    }\n}\n\nmodule.exports = HttpStatusError;"]}
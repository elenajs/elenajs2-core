{"version":3,"sources":["FsResourceDispatcher.js"],"names":[],"mappings":"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","file":"FsResourceDispatcher.js","sourcesContent":["\"use strict\";\n\nlet HttpStatusError = require('./errors/HttpStatusError.js'),\n    Dispatcher = require('./Dispatcher.js'),\n    dfs = require('./utils/dfs.js'),\n    path = require('path'),\n    url = require('url'),\n    mimeType = require('mimetype');\n\nclass FsResourceDispatcher extends Dispatcher {\n    toString() {\n        let name = 'FsResourceDispatcher';\n        return `[object ${name}]`;\n    }\n\n    constructor(rootPath, resourcePath, inline) {\n        super();\n\n        this._rootPath = rootPath;\n        this._resourcePath = resourcePath;\n        this._inline = (inline !== undefined) ? inline : true;\n    }\n\n    get rootPath() {\n        return this._rootPath;\n    }\n\n    get inline() {\n        return this._inline;\n    }\n\n    get resourcePath() {\n        return this._resourcePath;\n    }\n\n    isEligible(requestContext) {\n        let request = requestContext.request,\n            reqPathname = url.parse(request.url).pathname,\n            resourcePath = path.resolve(this.resourcePath, reqPathname.substr(this.rootPath.length));\n\n        return dfs.stat(resourcePath).then(function (stats) {\n            if (!stats.isDirectory()) {\n                requestContext.stats = stats;\n                return true;\n            }\n        }).catch(function (err) {\n            if (err.errno !== -2) { //NOENT\n                throw new HttpStatusError(500);\n            }\n        });\n\n    }\n\n    render(requestContext) {\n        let request = requestContext.request,\n            response = requestContext.response,\n            stats = requestContext.stats,\n            reqPathname = url.parse(request.url).pathname,\n            resourcePath = path.resolve(this.resourcePath, reqPathname.substr(this.rootPath.length));\n        let etag = stats.size.toString(16) + '-' + Date.parse(stats.mtime).toString(16);\n        if (request.headers['if-none-match'] === etag) {\n            response.writeHead(304, {\n                'Content-Length': 0\n            });\n            response.end();\n        } else {\n            var fileStream = dfs.createReadStream(resourcePath),\n                head = {\n                    'Content-Length': stats.size,\n                    'Content-Type': mimeType.lookup(resourcePath) || \"application/octet-stream\",\n                    'ETag': etag\n                };\n            if (this.inline) {\n                head['Content-Disposition'] = 'inline; filename=\"' + path.basename(resourcePath) + '\"';\n            }\n            response.writeHead(200, head);\n            fileStream.pipe(response);\n        }\n\n    }\n\n}\nmodule.exports = FsResourceDispatcher;"],"sourceRoot":"/source/"}
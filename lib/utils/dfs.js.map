{"version":3,"sources":["../../src/utils/dfs.js"],"names":["require","fs","asDeferred","fn","self","noError","args","Array","prototype","slice","call","arguments","Promise","resolve","push","a","length","apply","reject","err","shift","dfs","singleArgFunctions","functionName","functionCode","test","indexOf","module","exports"],"mappings":"AAAA;;AAEAA,QAAQ,eAAR;;AAEA,IAAMC,KAAKD,QAAQ,IAAR,CAAX;;AAEA,SAASE,UAAT,CAAoBC,EAApB,EAAwBC,IAAxB,EAA8BC,OAA9B,EAAuC;;AAEnCD,WAAOA,QAAQ,IAAf;AACA,WAAOC,UAAU,YAAY;AACzB,YAAIC,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,eAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AAClCP,iBAAKQ,IAAL,CAAU,YAAY;AAClB,oBAAIC,IAAIR,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAR;AACAE,wBAAQE,EAAEC,MAAF,GAAW,CAAX,GAAeD,CAAf,GAAmBA,EAAEC,MAAF,GAAWD,EAAE,CAAF,CAAX,GAAkB,IAA7C;AACH,aAHD;AAIAZ,eAAGc,KAAH,CAASb,IAAT,EAAeE,IAAf;AACH,SANM,CAAP;AAOH,KATM,GASH,YAAY;AACZ,YAAIA,OAAOC,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAX;AACA,eAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBK,MAAnB,EAA2B;AAC1CZ,iBAAKQ,IAAL,CAAU,YAAY;AAClB,oBAAIC,IAAIR,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BC,SAA3B,CAAR;AAAA,oBACIQ,MAAMJ,EAAEK,KAAF,EADV;AAEA,oBAAID,GAAJ,EAAS;AACLD,2BAAOC,GAAP;AACH,iBAFD,MAEO;AACHN,4BAAQE,EAAEC,MAAF,GAAW,CAAX,GAAeD,CAAf,GAAmBA,EAAEC,MAAF,GAAWD,EAAE,CAAF,CAAX,GAAkB,IAA7C;AACH;AACJ,aARD;AASAZ,eAAGc,KAAH,CAASb,IAAT,EAAeE,IAAf;AACH,SAXM,CAAP;AAYH,KAvBD;AAwBH;;AAED,IAAIe,MAAM,EAAV;AAAA,IACIC,qBAAqB,CAAC,QAAD,CADzB;;AAGA,KAAK,IAAIC,YAAT,IAA0BtB,EAA1B,EAA8B;AAC1B,QAAIuB,eAAevB,GAAGsB,YAAH,CAAnB;AACA,QAAIA,gBAAgBC,YAApB,EAAkC;AAC9B,YAAI,OAAOA,YAAP,KAAwB,UAAxB,IAAsC,CAAC,sCAAsCC,IAAtC,CAA2CF,YAA3C,CAA3C,EAAqG;AAAE;AACnGF,gBAAIE,YAAJ,IAAoBrB,WAAWsB,YAAX,EAAyBvB,EAAzB,EAA6B,CAACqB,mBAAmBI,OAAnB,CAA2BH,YAA3B,CAA9B,CAApB,CADiG,CACJ;AAChG,SAFD,MAEO;AACHF,gBAAIE,YAAJ,IAAoBC,YAApB,CADG,CAC+B;AACrC;AACJ;AACJ;;AAEDG,OAAOC,OAAP,GAAiBP,GAAjB","file":"dfs.js","sourcesContent":["\"use strict\";\n\nrequire('gulp-polyfill');\n\nconst fs = require('fs');\n\nfunction asDeferred(fn, self, noError) {\n\n    self = self || this;\n    return noError ? function () {\n        let args = Array.prototype.slice.call(arguments);\n        return new Promise(function (resolve) {\n            args.push(function () {\n                var a = Array.prototype.slice.call(arguments);\n                resolve(a.length > 1 ? a : a.length ? a[0] : null);\n            });\n            fn.apply(self, args);\n        });\n    } : function () {\n        let args = Array.prototype.slice.call(arguments);\n        return new Promise(function (resolve, reject) {\n            args.push(function () {\n                var a = Array.prototype.slice.call(arguments),\n                    err = a.shift();\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(a.length > 1 ? a : a.length ? a[0] : null);\n                }\n            });\n            fn.apply(self, args);\n        });\n    };\n}\n\nlet dfs = {},\n    singleArgFunctions = ['exists'];\n\nfor (let functionName  in fs) {\n    let functionCode = fs[functionName];\n    if (functionName && functionCode) {\n        if (typeof functionCode === 'function' && !/(^[_A-Z]|^create|^(un)?watch|Sync$)/.test(functionName)) { // It is something we want to convert\n            dfs[functionName] = asDeferred(functionCode, fs, ~singleArgFunctions.indexOf(functionName)); // Create a deferred\n        } else {\n            dfs[functionName] = functionCode; // Leave alone\n        }\n    }\n}\n\nmodule.exports = dfs;"]}